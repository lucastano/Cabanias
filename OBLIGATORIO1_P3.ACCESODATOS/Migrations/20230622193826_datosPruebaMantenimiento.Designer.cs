// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using OBLIGATORIO1_P3.ACCESODATOS;

#nullable disable

namespace OBLIGATORIO1_P3.ACCESODATOS.Migrations
{
    [DbContext(typeof(ObligatorioContext))]
    [Migration("20230622193826_datosPruebaMantenimiento")]
    partial class datosPruebaMantenimiento
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("OBLIGATORIO1_P3.LOGICANEGOCIO.Entidades.Cabania", b =>
                {
                    b.Property<int>("NumeroHabitacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("NumeroHabitacion"));

                    b.Property<int>("CantidadMaximaPersonas")
                        .HasColumnType("int");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Foto")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("Habilitada")
                        .HasColumnType("bit");

                    b.Property<bool?>("Jacuzzi")
                        .HasColumnType("bit");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int?>("TipoCabanaId")
                        .HasColumnType("int");

                    b.Property<int>("secuenciador")
                        .HasColumnType("int");

                    b.HasKey("NumeroHabitacion");

                    b.HasIndex("TipoCabanaId");

                    b.HasIndex(new[] { "Nombre" }, "UX_CABAÑA_NOMBRE")
                        .IsUnique()
                        .IsDescending();

                    b.ToTable("Cabania");
                });

            modelBuilder.Entity("OBLIGATORIO1_P3.LOGICANEGOCIO.Entidades.Mantenimiento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<double>("CostoMantenimiento")
                        .HasColumnType("float");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaMantenimiento")
                        .HasColumnType("datetime2");

                    b.Property<string>("Trabajador")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("cabaniaCodigo")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("cabaniaCodigo");

                    b.ToTable("Mantenimiento");
                });

            modelBuilder.Entity("OBLIGATORIO1_P3.LOGICANEGOCIO.Entidades.Tipo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<double>("CostoPorHuesped")
                        .HasColumnType("float");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "Nombre" }, "UX_TIPO_NOMBRE")
                        .IsUnique()
                        .IsDescending();

                    b.ToTable("Tipo");
                });

            modelBuilder.Entity("OBLIGATORIO1_P3.LOGICANEGOCIO.Entidades.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Mail")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<byte[]>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("PasswordSalt")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "Mail" }, "MailIndex")
                        .IsUnique();

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("OBLIGATORIO1_P3.LOGICANEGOCIO.Entidades.Cabania", b =>
                {
                    b.HasOne("OBLIGATORIO1_P3.LOGICANEGOCIO.Entidades.Tipo", "TipoCabana")
                        .WithMany()
                        .HasForeignKey("TipoCabanaId");

                    b.Navigation("TipoCabana");
                });

            modelBuilder.Entity("OBLIGATORIO1_P3.LOGICANEGOCIO.Entidades.Mantenimiento", b =>
                {
                    b.HasOne("OBLIGATORIO1_P3.LOGICANEGOCIO.Entidades.Cabania", "Cabania")
                        .WithMany("Mantenimientos")
                        .HasForeignKey("cabaniaCodigo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cabania");
                });

            modelBuilder.Entity("OBLIGATORIO1_P3.LOGICANEGOCIO.Entidades.Cabania", b =>
                {
                    b.Navigation("Mantenimientos");
                });
#pragma warning restore 612, 618
        }
    }
}
